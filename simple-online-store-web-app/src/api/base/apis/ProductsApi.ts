/* tslint:disable */
/* eslint-disable */
/**
 * SimpleOnlineStoreApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreateProductDto,
  Order,
  Product,
} from '../models/index';
import {
    CreateProductDtoFromJSON,
    CreateProductDtoToJSON,
    OrderFromJSON,
    OrderToJSON,
    ProductFromJSON,
    ProductToJSON,
} from '../models/index';

export interface ProductsCreatePostRequest {
    createProductDto?: CreateProductDto;
}

export interface ProductsGetRequest {
    priceFrom?: number;
    priceTo?: number;
    orderBy?: string;
    order?: Order;
}

/**
 * ProductsApi - interface
 * 
 * @export
 * @interface ProductsApiInterface
 */
export interface ProductsApiInterface {
    /**
     * 
     * @param {CreateProductDto} [createProductDto] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProductsApiInterface
     */
    productsCreatePostRaw(requestParameters: ProductsCreatePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Product>>;

    /**
     */
    productsCreatePost(requestParameters: ProductsCreatePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Product>;

    /**
     * 
     * @param {number} [priceFrom] 
     * @param {number} [priceTo] 
     * @param {string} [orderBy] 
     * @param {Order} [order] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProductsApiInterface
     */
    productsGetRaw(requestParameters: ProductsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Product>>>;

    /**
     */
    productsGet(requestParameters: ProductsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Product>>;

}

/**
 * 
 */
export class ProductsApi extends runtime.BaseAPI implements ProductsApiInterface {

    /**
     */
    async productsCreatePostRaw(requestParameters: ProductsCreatePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Product>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/Products/Create`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateProductDtoToJSON(requestParameters['createProductDto']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ProductFromJSON(jsonValue));
    }

    /**
     */
    async productsCreatePost(requestParameters: ProductsCreatePostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Product> {
        const response = await this.productsCreatePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async productsGetRaw(requestParameters: ProductsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Product>>> {
        const queryParameters: any = {};

        if (requestParameters['priceFrom'] != null) {
            queryParameters['priceFrom'] = requestParameters['priceFrom'];
        }

        if (requestParameters['priceTo'] != null) {
            queryParameters['priceTo'] = requestParameters['priceTo'];
        }

        if (requestParameters['orderBy'] != null) {
            queryParameters['orderBy'] = requestParameters['orderBy'];
        }

        if (requestParameters['order'] != null) {
            queryParameters['order'] = requestParameters['order'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/Products`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ProductFromJSON));
    }

    /**
     */
    async productsGet(requestParameters: ProductsGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Product>> {
        const response = await this.productsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
